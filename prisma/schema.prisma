
datasource mysql {
  provider = "mysql"
  url      = "mysql://root:prisma@localhost:3306/prisma"
  enabled  = false
}

datasource postgresql {
  provider = "postgresql"
  url      = "postgresql://ccyleywleafutj:a89e2a184f59f70bb6a5ddef9f042f4cd95934195c4c31f3054e72ea216deb33@ec2-54-221-225-11.compute-1.amazonaws.com:5432/d4v0s437vieiac?sslaccept=accept_invalid_certs"
  enabled  = true

}

generator photon {
  provider      = "photonjs"
  binaryTargets = ["native"]
}




model User {
  id          String        @default(cuid()) @id @unique
  code        Int           @unique
  email       String        @unique
  password    String
  firstName   String
  lastName    String
  title       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  timeCards   TimeCard[]
  timeRoles   TimeRole[]
  punchCards  PunchCard[]
  // group: [UserGroup]
  permissions Permissions[]

}

model TimeCard {
  id        String    @default(cuid()) @id @unique
  user      User
  punchTime DateTime
  punchType Punchtype
  updatedAt DateTime  @updatedAt
  createdAt DateTime  @default(now())
  timeRole  TimeRole
}

model PunchCard {
  id        String   @default(cuid()) @id @unique
  user      User
  punchIn   DateTime
  punchOut  DateTime
  timeRole  TimeRole
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TimeRole {
  id          String      @default(cuid()) @id @unique
  name        String
  shortName   String
  description String
  payRate     Int
  users       User[]
  timeCards   TimeCard[]
  punchCards  PunchCard[]
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
}

enum Permissions {
  ADMIN
  USER
  TIMECARDVIEWER
  TIMECARDEDITOR
}

enum Punchtype {
  CLOCKIN
  CLOCKOUT
}