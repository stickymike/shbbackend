
datasource mysql {
  provider = "mysql"
  url = "***"
  enabled  = false
}

generator photon {
  provider = "photonjs"
  // binaryTargets = ["native"]
}

datasource postgresql {
  provider = "postgresql"
  url = "***"
  enabled  = true

}

model User {
  id          String        @default(cuid()) @id
  code        Int           @unique
  email       String        @unique
  password    String
  firstName   String
  lastName    String
  title       String?
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  // timeCards   TimeCard[]
  timeRoles   TimeRole[]
  punchCards  PunchCard[]
  // group: [UserGroup]
  permissions Permissions[]
  events      Event[]
}

model PunchCard {
  id        String   @default(cuid()) @id
  user      User
  punchIn   DateTime
  punchOut  DateTime
  timeRole  TimeRole
  updatedAt DateTime @updatedAt
  createdAt DateTime @default(now())
}

model TimeRole {
  id          String      @default(cuid()) @id
  name        String
  shortName   String
  description String
  payRate     Int
  users       User[]
  // timeCards   TimeCard[]
  punchCards  PunchCard[]
  updatedAt   DateTime    @updatedAt
  createdAt   DateTime    @default(now())
}

enum Permissions {
  ADMIN
  USER
  TIMECARDVIEWER
  TIMECARDEDITOR
}

enum Punchtype {
  CLOCKIN
  CLOCKOUT
}

model Event {
  id           String   @default(cuid()) @id
  user         User
  name         String
  description  String
  approved     Boolean  @default(false)
  startDateUTC DateTime
  endDateUTC   DateTime
  isAllDay     Boolean  @default(false)
  duration     Float
}